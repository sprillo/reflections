What happens when you initialize a repository? Why do you need to do it?

Initializing a repository in a directory creates the hidden .git directory used by git to manage the metadata necessary to hold the repo in the current directory. This is made through the git init command. No commits will be made yet, so the repo has 0 commits. To check the status of the repo and verify that there are no commits, we can use the git status command. It will return an error.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is the place to buffer files into the repository. By not tracking all the files in the working directory, we can keep personal files in the working directory without anyone else having to deal with them. Also, the staging area allows us to make logical commits, adding logically related files each time.


How can you use the staging area to make sure you have one commit per logical change?

By comparing the staging area changes against the last commit with git diff --staged, and checking that we are commiting exactly what we intended.